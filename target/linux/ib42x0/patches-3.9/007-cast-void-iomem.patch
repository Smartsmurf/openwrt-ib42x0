--- a/arch/arm/mach-gemini/irq.c	2012-12-11 04:30:57.000000000 +0100
+++ b/arch/arm/mach-gemini/irq.c	2012-12-17 23:17:09.871908298 +0100
@@ -20,18 +20,19 @@
 #include <asm/system_misc.h>
 #include <mach/hardware.h>
 
-#define IRQ_SOURCE(base_addr)	(base_addr + 0x00)
-#define IRQ_MASK(base_addr)	(base_addr + 0x04)
-#define IRQ_CLEAR(base_addr)	(base_addr + 0x08)
-#define IRQ_TMODE(base_addr)	(base_addr + 0x0C)
-#define IRQ_TLEVEL(base_addr)	(base_addr + 0x10)
-#define IRQ_STATUS(base_addr)	(base_addr + 0x14)
-#define FIQ_SOURCE(base_addr)	(base_addr + 0x20)
-#define FIQ_MASK(base_addr)	(base_addr + 0x24)
-#define FIQ_CLEAR(base_addr)	(base_addr + 0x28)
-#define FIQ_TMODE(base_addr)	(base_addr + 0x2C)
-#define FIQ_LEVEL(base_addr)	(base_addr + 0x30)
-#define FIQ_STATUS(base_addr)	(base_addr + 0x34)
+#define IRQ_SOURCE(base_addr)	(void __iomem*)(base_addr + 0x00)
+#define IRQ_MASK(base_addr)	(void __iomem*)(base_addr + 0x04)
+#define IRQ_CLEAR(base_addr)	(void __iomem*)(base_addr + 0x08)
+#define IRQ_TMODE(base_addr)	(void __iomem*)(base_addr + 0x0C)
+#define IRQ_TLEVEL(base_addr)	(void __iomem*)(base_addr + 0x10)
+#define IRQ_STATUS(base_addr)	(void __iomem*)(base_addr + 0x14)
+#define FIQ_SOURCE(base_addr)	(void __iomem*)(base_addr + 0x20)
+#define FIQ_MASK(base_addr)	(void __iomem*)(base_addr + 0x24)
+#define FIQ_CLEAR(base_addr)	(void __iomem*)(base_addr + 0x28)
+#define FIQ_TMODE(base_addr)	(void __iomem*)(base_addr + 0x2C)
+#define FIQ_LEVEL(base_addr)	(void __iomem*)(base_addr + 0x30)
+#define FIQ_STATUS(base_addr)	(void __iomem*)(base_addr + 0x34)
+#define IRQ_END(base_addr)	(base_addr + 0x38)
 
 static void gemini_ack_irq(struct irq_data *d)
 {
@@ -66,7 +67,7 @@
 static struct resource irq_resource = {
 	.name	= "irq_handler",
 	.start	= IO_ADDRESS(GEMINI_INTERRUPT_BASE),
-	.end	= IO_ADDRESS(FIQ_STATUS(GEMINI_INTERRUPT_BASE)) + 4,
+	.end	= IO_ADDRESS(IRQ_END(GEMINI_INTERRUPT_BASE))
 };
 
 void __init gemini_init_irq(void)
@@ -101,3 +102,4 @@
 	__raw_writel(mode, IRQ_TMODE(IO_ADDRESS(GEMINI_INTERRUPT_BASE)));
 	__raw_writel(level, IRQ_TLEVEL(IO_ADDRESS(GEMINI_INTERRUPT_BASE)));
 }
+
--- a/arch/arm/mach-gemini/time.c	2012-12-17 22:19:25.596422063 +0100
+++ b/arch/arm/mach-gemini/time.c	2012-12-17 22:22:00.953721424 +0100
@@ -17,11 +17,11 @@
 /*
  * Register definitions for the timers
  */
-#define TIMER_COUNT(BASE_ADDR)		(BASE_ADDR  + 0x00)
-#define TIMER_LOAD(BASE_ADDR)		(BASE_ADDR  + 0x04)
-#define TIMER_MATCH1(BASE_ADDR)		(BASE_ADDR  + 0x08)
-#define TIMER_MATCH2(BASE_ADDR)		(BASE_ADDR  + 0x0C)
-#define TIMER_CR(BASE_ADDR)		(BASE_ADDR  + 0x30)
+#define TIMER_COUNT(BASE_ADDR)		(void __iomem*)(BASE_ADDR  + 0x00)
+#define TIMER_LOAD(BASE_ADDR)		(void __iomem*)(BASE_ADDR  + 0x04)
+#define TIMER_MATCH1(BASE_ADDR)		(void __iomem*)(BASE_ADDR  + 0x08)
+#define TIMER_MATCH2(BASE_ADDR)		(void __iomem*)(BASE_ADDR  + 0x0C)
+#define TIMER_CR(BASE_ADDR)		(void __iomem*)(BASE_ADDR  + 0x30)
 
 #define TIMER_1_CR_ENABLE		(1 << 0)
 #define TIMER_1_CR_CLOCK		(1 << 1)
@@ -56,7 +56,7 @@
 {
 	unsigned int tick_rate, reg_v;
 
-	reg_v = __raw_readl(IO_ADDRESS(GEMINI_GLOBAL_BASE + GLOBAL_STATUS));
+	reg_v = __raw_readl((void __iomem*)IO_ADDRESS(GEMINI_GLOBAL_BASE + GLOBAL_STATUS));
 	tick_rate = REG_TO_AHB_SPEED(reg_v) * 1000000;
 
 	printk(KERN_INFO "Bus: %dMHz", tick_rate / 1000000);
--- a/arch/arm/mach-gemini/devices.c	2012-12-17 22:23:03.605857252 +0100
+++ b/arch/arm/mach-gemini/devices.c	2012-12-17 22:29:34.684177246 +0100
@@ -67,7 +68,7 @@
 {
 	unsigned int reg;
 
-	reg = __raw_readl(IO_ADDRESS(GEMINI_GLOBAL_BASE) + GLOBAL_STATUS);
+	reg = __raw_readl((void __iomem*)(IO_ADDRESS(GEMINI_GLOBAL_BASE) + GLOBAL_STATUS));
 
 	if ((reg & FLASH_TYPE_MASK) != FLASH_TYPE_PARALLEL)
 		return -ENXIO;
@@ -78,10 +79,10 @@
 		pflash_platform_data.width = 1;
 
 	/* enable parallel flash pins and disable others */
-	reg = __raw_readl(IO_ADDRESS(GEMINI_GLOBAL_BASE) + GLOBAL_MISC_CTRL);
+	reg = __raw_readl((void __iomem*)(IO_ADDRESS(GEMINI_GLOBAL_BASE) + GLOBAL_MISC_CTRL));
 	reg &= ~PFLASH_PADS_DISABLE;
 	reg |= SFLASH_PADS_DISABLE | NAND_PADS_DISABLE;
-	__raw_writel(reg, IO_ADDRESS(GEMINI_GLOBAL_BASE) + GLOBAL_MISC_CTRL);
+	__raw_writel(reg, (void __iomem*)(IO_ADDRESS(GEMINI_GLOBAL_BASE) + GLOBAL_MISC_CTRL));
 
 	flash_resource.end = flash_resource.start + size - 1;
 
 
--- a/arch/arm/mach-gemini/include/mach/system.h	2012-12-25 13:02:38.840898232 +0100
+++ b/arch/arm/mach-gemini/include/mach/system.h	2012-12-25 13:04:40.633155441 +0100
@@ -16,7 +16,7 @@
 
 static inline void arch_reset(char mode, const char *cmd)
 {
-	__raw_writel(RESET_GLOBAL | RESET_CPU1,
+	__raw_writel(RESET_GLOBAL | RESET_CPU1, (void __iomem*)
 		     IO_ADDRESS(GEMINI_GLOBAL_BASE) + GLOBAL_RESET);
 }
 
